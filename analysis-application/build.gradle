plugins {
  id 'org.springframework.boot' version '2.3.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
  id 'war'
  id 'org.sonarqube' version "2.6.1"
  id 'jacoco'
}

apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'


group = 'de.jatan'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

jacocoTestReport {
    reports {
      xml.enabled false
      csv.enabled false
      html.enabled true
      html.destination file("${buildDir}/jacocoHtml")
  }
}

sonarqube {
    properties {
      property 'sonar.projectName', 'Jatan - Analysis-Application'
      property "sonar.projectKey", "org.sonarqube:java-gradle-simple"
      }
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
	mavenCentral()
}

dependencies {
  compileOnly('org.projectlombok:lombok')
  testCompile('org.springframework.boot:spring-boot-starter-test')
  testCompile('org.mockito:mockito-junit-jupiter:2.23.0')
	annotationProcessor 'org.projectlombok:lombok:1.18.12'
	testCompileOnly 'org.projectlombok:lombok:1.18.12'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
  implementation 'org.eclipse.jgit:org.eclipse.jgit:5.4.2.201908231537-r'
  compile("mysql:mysql-connector-java")
	runtimeOnly 'com.h2database:h2'
  testRuntimeOnly("org.junit.platform:junit-platform-launcher:1.6.1")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.6.1")
  testRuntimeOnly("org.junit.vintage:junit-vintage-engine:5.6.1")
  testImplementation 'org.hamcrest:hamcrest:2.2'
}

test {
	useJUnitPlatform()
}
